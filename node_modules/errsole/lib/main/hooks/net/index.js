var appConfig = require('../../../config');

var NetHook = {};

function wrapNetServerListen(_net) {
  if (!_net || typeof _net.Server !== 'function') {
    throw new Error('Errsole Internal: Invalid _net module provided');
  }
  const originalListenMethod = _net.Server.prototype.listen;
  _net.Server.prototype.listen = function(...args) {
    let port;
    if (args.length > 0 && typeof args[0] === 'object' && !isNaN(args[0].port)) {
      port = args[0].port;
    } else if (args.length > 0 && typeof args[0] === 'number') {
      port = args[0];
    }
    if (port !== undefined) {
      appConfig.addWrappedPorts(port);
    }
    originalListenMethod.apply(this, args);
  };
  return _net;
}

function wrapHttpsServerListen(_https) {
  if (!_https || typeof _https.Server !== 'function') {
    throw new Error('Errsole Internal: Invalid _https module provided');
  }
  const originalListenMethod = _https.Server.prototype.listen;
  _https.Server.prototype.listen = function(...args) {
    let port;
    if (args.length > 0 && typeof args[0] === 'object' && !isNaN(args[0].port)) {
      port = args[0].port;
    } else if (args.length > 0 && typeof args[0] === 'number') {
      port = args[0];
    }
    if (port !== undefined) {
      appConfig.addMainProcessPort(port);
    }
    originalListenMethod.apply(this, args);
  };
  return _https;
}


NetHook.packages = [{
    name: 'net',
    wrapper: wrapNetServerListen
  }, {
    name: 'https',
    wrapper: wrapHttpsServerListen
  }
];

module.exports = NetHook;
