'use strict'

var Module = require('module');
var chalk = require('chalk');
var NetHook = require('./net');
var ExpressHook = require('./express');
var SailsHook = require('./sails');
var KoaHook = require('./koa');
var NestHook = require('./nest');
var ProcessHook = require('./process');
var CollectLogsHook = require('./collectLogs');
var appConfig = require('../../config');

var Hooks = {
  wrappers: {}
}

Hooks.initialize = function() {
  initHooks();
  wrapRequire();
  if(require && require.main && require.main.filename) {
    verifyCodeSnippet();
  }
}

Hooks.setupHandler = function(app) {
  var frameworkName = appConfig.getFrameworkName();
  if(frameworkName == 'express') {
    ExpressHook.setupHandler(app)
  } else if(frameworkName == 'koa') {
    KoaHook.setupHandler(app)
  }
}

function initHooks() {
  var frameworkName = appConfig.getFrameworkName();
  ProcessHook.initialize();
  CollectLogsHook.initialize();
  registerHookWrappers(NetHook);
  registerHookWrappers(ProcessHook);
  if(frameworkName == 'express') {
    registerHookWrappers(ExpressHook);
  } else if(frameworkName == 'sails') {
    registerHookWrappers(SailsHook);
  } else if(frameworkName == 'koa') {
    registerHookWrappers(KoaHook);
  } else if(frameworkName == 'nest') {
    registerHookWrappers(NestHook);
  }
}

function registerHookWrappers(hook) {
  hook.packages.forEach(function(pkg) {
    Hooks.wrappers[pkg.name] = pkg.wrapper;
  });
}

function wrapRequire() {
  var originalRequire = Module.prototype.require;
  Module.prototype.require = function(id) {
    var origPackage = originalRequire.call(this, id);
    if (id in Hooks.wrappers) {
      return Hooks.wrappers[id](origPackage);
    } else {
      return origPackage;
    }
  }
}

function verifyCodeSnippet() {
  var requireMain = require.main;
  if(requireMain) {
    if(requireMain.children) {
      var fileName = requireMain.children[0].filename;
      var status = fileName.includes('errsole.js');
      if(!status) {
        console.error(chalk.bold.white(chalk.bgRed("\n Warning: Errsole is not placed at the top of your app's main file. Please read the setup module instructions. \n")));
        appConfig.setVerifyCodeSnippetStatus(false);
      }
    } else {
      console.error(new Error('Errsole Internal Error: unable to fetch module children. Please report the issue at https://github.com/errsole/errsole/issues'));
    }
  } else {
    console.error(new Error('Errsole Internal Error: unable to fetch errsole module loading details. Please report the issue at https://github.com/errsole/errsole/issues'));
  }
}

module.exports = Hooks;
