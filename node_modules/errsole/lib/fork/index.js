'use strict'

var ParentConnector = require('./parentConnector');
var Hook = require('./hooks');
var appConfig = require('../config');

var Fork = {};

Fork.initialize = function(options) {
  process.env = process.env || {};
  process.env.ERRSOLE_FRAMEWORK = options.framework || '';
  Hook.initialize();
  ParentConnector.processStarted();
}

function parentMessageCallback(data) {
  if (data.data.type == 'errsole_session_update') {
    updateExpressSession(data);
  }
};
ParentConnector.onMessage(parentMessageCallback);

function updateExpressSession(data) {
  var sessId = data.data.attributes.sid;
  var sessObj = data.data.attributes.session;
  var sessionStore = appConfig.sessionStore;
  if(sessionStore) {
    try {
      sessionStore.set(sessId, sessObj, function(err, session) {
        if (!err) {
          var payload = {
            "data": {
              "type": 'errsole_session_update_response',
              "attributes": {
                "success": true
              }
            }
          };
        }
        ParentConnector.sendMessage(payload);
      });
    } catch(e) {}
  }
};


Fork.setupHandler = function(app) {
  Hook.setupHandler(app)
}

Fork.wrapPort = function(port) {
  if(process.env.ERRSOLE_PORTS) {
    var ports = JSON.parse(process.env.ERRSOLE_PORTS);
    return ports[port.toString()];
  }
}

module.exports = Fork;
